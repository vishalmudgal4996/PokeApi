{"version":3,"sources":["common/header/Header.js","screens/home/Home.js","reportWebVitals.js","index.js"],"names":["Header","props","state","className","Typography","variant","gutterBottom","Component","Home","handlePrev","offset","limit","url","baseUrl","fetch","then","response","json","allpokemon","setState","pokemonList","results","console","log","handleNext","imageUrl","loading","xhr","XMLHttpRequest","that","this","addEventListener","readyState","status","JSON","parse","responseText","open","setRequestHeader","send","Button","onClick","map","item","index","Card","sx","minWidth","style","marginBottom","CardMedia","component","image","alt","name","CardActions","justifyContent","color","fontWeight","withStyles","theme","root","display","overflow","backgroundColor","palette","background","paper","gridListMain","transform","title","primary","light","titleBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b4851e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"app-header\">\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Pokemons\r\n          </Typography>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../common/header/Header\";\r\nimport \"./Home.css\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridListMain: {\r\n    transform: \"translateZ(0)\",\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n  },\r\n});\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemonList: [],\r\n      imageUrl:\r\n        \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\",\r\n      loading: true,\r\n      baseUrl: \"https://pokeapi.co/api/v2\",\r\n      offset: 0,\r\n      limit: 20\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let data = null;\r\n    let xhr = new XMLHttpRequest();\r\n    let that = this;\r\n\r\n    let type = \"pokemon\";\r\n\r\n    const url = `${this.state.baseUrl}/${type}`;\r\n\r\n    xhr.addEventListener(\"readystatechange\", function () {\r\n      if (xhr.readyState === 4 && xhr.status === 200) {\r\n        that.setState({\r\n          pokemonList: JSON.parse(this.responseText).results,\r\n        });\r\n\r\n        console.log(that.state.pokemonList);\r\n      }\r\n    });\r\n\r\n    xhr.open(\"GET\", url);\r\n    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n    xhr.send(data);\r\n  }\r\n\r\n  handlePrev = () => {\r\n    let type = \"pokemon\";\r\n    let offset = this.state.offset;\r\n    let limit = this.state.limit;\r\n    offset = offset - limit;\r\n\r\n    if (offset >= 0) {\r\n      const url = `${this.state.baseUrl}/${type}?offset=${offset}&limit=${limit}`;\r\n\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(allpokemon => {\r\n          this.setState({\r\n            offset: offset,\r\n            pokemonList: allpokemon.results,\r\n          });\r\n          console.log(allpokemon.results);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleNext = () => {\r\n    let type = \"pokemon\";\r\n    let offset = this.state.offset;\r\n    let limit = this.state.limit;\r\n    offset = offset + limit;\r\n\r\n    if (offset >= 0) {\r\n      const url = `${this.state.baseUrl}/${type}?offset=${offset}&limit=${limit}`;\r\n\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(allpokemon => {\r\n          this.setState({\r\n            offset: offset,\r\n            pokemonList: allpokemon.results,\r\n          });\r\n          console.log(allpokemon.results);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"navigation-panel\">\r\n            <Button variant=\"contained\" className=\"custom-btn\" onClick={this.handlePrev}>Prev</Button>\r\n            <Button variant=\"contained\" className=\"custom-btn\" onClick={this.handleNext}>Next</Button>\r\n          </div>\r\n          <div className=\"flex-container\">\r\n            <div className=\"characters\">\r\n              {this.state.pokemonList.map((item, index) => (\r\n                <Card sx={{ minWidth: 275 }} key={\"item\" + index} style={{ marginBottom: 20 + 'px' }}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    image={`${this.state.imageUrl}${index + this.state.offset + 1}.png`}\r\n                    alt={item.name}\r\n                  />\r\n                  <CardActions style={{ justifyContent: \"center\", color: \"black\", fontWeight: \"bolder\" }}>\r\n                    {item.name}\r\n                  </CardActions>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default Home;\r\n\r\nexport default withStyles(styles)(Home);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n//import Controller from \"./screens/Controller\";\r\nimport Home from \"../src/screens/home/Home\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n//ReactDOM.render(<Controller />, document.getElementById(\"root\"));\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}